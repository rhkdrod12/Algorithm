package Other.Quiz02;

public class Quiz02 {
	
	public static void main(String[] args) {
		
		int[][] land = {{1, 4, 8, 10}, {5, 5, 5, 5}, {10, 10, 10, 10}, {10, 10, 10, 20}};
		int height = 3;
		int result = 15;
		
	}
	
	/*
	문제 설명
	N x N 크기인 정사각 격자 형태의 지형이 있습니다.
	각 격자 칸은 1 x 1 크기이며, 숫자가 하나씩 적혀있습니다.
	격자 칸에 적힌 숫자는 그 칸의 높이를 나타냅니다.
	이 지형의 아무 칸에서나 출발해 모든 칸을 방문하는 탐험을 떠나려 합니다.
	칸을 이동할 때는 상, 하, 좌, 우로 한 칸씩 이동할 수 있는데, 현재 칸과 이동하려는 칸의 높이 차가 height 이하여야 합니다.
	높이 차가 height 보다 많이 나는 경우에는 사다리를 설치해서 이동할 수 있습니다.
	이때, 사다리를 설치하는데 두 격자 칸의 높이차만큼 비용이 듭니다.
	따라서, 최대한 적은 비용이 들도록 사다리를 설치해서 모든 칸으로 이동 가능하도록 해야 합니다.
	설치할 수 있는 사다리 개수에 제한은 없으며, 설치한 사다리는 철거하지 않습니다.
	각 격자칸의 높이가 담긴 2차원 배열 land와 이동 가능한 최대 높이차 height가 매개변수로 주어질 때,
	모든 칸을 방문하기 위해 필요한 사다리 설치 비용의 최솟값을 return 하도록 solution 함수를 완성해주세요.
	
	[제한사항]
	
	land는 N x N크기인 2차원 배열입니다.
	land의 최소 크기는 4 x 4, 최대 크기는 300 x 300입니다.
	land의 원소는 각 격자 칸의 높이를 나타냅니다.
	격자 칸의 높이는 1 이상 10,000 이하인 자연수입니다.
	height는 1 이상 10,000 이하인 자연수입니다.
	
	land[a][b] => (a,b)의 높이를 말함
	(a,b)에서 상화좌우로 이동이 가능하지만 이동하려는 좌표의 높이와 현재의 높이차가 주어진 height보다 이하인 경우에만 사다리없이 가능
	따라서 최대한 적은 비용이 들도록 사다리를 설치해서 모든 칸으로 이동이 가능하도록 해야함
	
	이분연결인가..?
	
	즉 모든 칸은 연결하려면 한칸도 빠짐없이 연결을 가지고 있으면 되는거고
	그리고 사다리 설치피용은 높이차만큼 발생하니 최대한 적게 높이차가 나는 곳으로 연결을 갱신해나가면 되지 않겠남..?
	
	어차피 이동 가능한건 상하좌우이긴 하지만 못가는 경우에는 사다리를 설치해서 갈 수가 있지
	
	set같은 곳에다가 방문한 곳 넣어서 모든 곳을 방문햇는지 size가지고 확인하면 될거 같고..
	
	그리고 이동시에는
	
	일단 정사각형 -> 정사각형에서 모든 칸은 다 채우면서 이동하려면 딱히 도착점은 없네..?
	그리고 재방문을 못하는 것도 아니네..??
	그러이면 이야기가 달라지지?
	
	일단 사다리 없이 이동이 가능하면 하나의 묶음으로 볼 수 있겠네..?
	
	그리고 이 묶음들이 몇개가 있으며 이 묶음들에서 가장 싸게 이동 가능한 지점이 있을 거고
	그리고 이 게 최소의 비용으로 가능한 방식이겟네..
	
	블럭 묶는건 어렵지 않을 것으로 보이는데
	그럼 블럭간 최소 비용으로 이동 가능한 지점 찾는건~?
	
	블록으로 묶는다면 어떻게 묶지요?? list?
	
	
	 */
	static class Solution {
		public int solution(int[][] land, int height) {
			int answer = 0;
			return answer;
		}
		
		class Node{
			int nodeNum;
		}
	}
	
}
